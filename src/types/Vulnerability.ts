export type Severity = 'critical' | 'high' | 'moderate' | 'low' | 'info';

export interface AuditVulnerability {
    name: string;
    severity?: Severity | string; // normalize later
    range?: string;
    // other fields exist but are not needed here
};

export interface AuditJson {
    vulnerabilities?: Record<string, AuditVulnerability>;
};

export interface VulnerabilityView {
    name: string;
    severity: Severity;
    range?: string;
};

export type PerRootCounts = Record<Severity, number> & { total: number };

/**
 * Vulnerability counts for a package.
 */
export interface VulnerabilityCounts {
  critical: number;
  high: number;
  moderate: number;
  low: number;
  info: number;
  total: number;
}

export type RootEntry = [
  rootName: string,
  data: {
    vulns: VulnerabilityView[];
    counts: PerRootCounts;
  }
];
